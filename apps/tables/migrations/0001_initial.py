# Generated by Django 4.2 on 2025-10-30 11:02

import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import django_quill.fields
import pgvector.django.vector
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('invoice_code', models.CharField(max_length=100)),
                ('quantity', models.IntegerField(default=1)),
                ('license_type', models.CharField(blank=True, max_length=255, null=True)),
                ('license_method', models.CharField(blank=True, max_length=255, null=True)),
                ('owner', models.CharField(blank=True, max_length=255, null=True)),
                ('administrator', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('version_control', models.IntegerField(default=1, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationLinked',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_string', models.TextField()),
                ('match_string', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ChangeRequests',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.TextField(blank=True, db_column='number', null=True, verbose_name='number')),
                ('short_description', models.TextField(blank=True, db_column='short_description', null=True, verbose_name='short_description')),
                ('state', models.TextField(blank=True, db_column='state', null=True, verbose_name='state')),
                ('start_date', models.BigIntegerField(blank=True, db_column='start_date', null=True, verbose_name='start_date')),
                ('end_date', models.BigIntegerField(blank=True, db_column='end_date', null=True, verbose_name='end_date')),
                ('assigned_to', models.TextField(blank=True, db_column='assigned_to', null=True, verbose_name='assigned_to')),
                ('loader_instance', models.IntegerField(blank=True, null=True)),
                ('json_data', models.JSONField(blank=True, null=True)),
                ('hash_data', pgvector.django.vector.VectorField(blank=True, dimensions=1024, null=True)),
                ('fts', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ControlADUser',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('DataAge', models.BigIntegerField(blank=True, db_column='DataAge', null=True, verbose_name='DataAge')),
                ('SAMAccountName', models.TextField(blank=True, db_column='SAMAccountName', null=True, verbose_name='SAMAccountName')),
                ('Surname', models.TextField(blank=True, db_column='Surname', null=True, verbose_name='Surname')),
                ('Firtnames', models.TextField(blank=True, db_column='Firtnames', null=True, verbose_name='Firtnames')),
                ('Displayname', models.TextField(blank=True, db_column='Displayname', null=True, verbose_name='Displayname')),
                ('EmailAddress', models.TextField(blank=True, db_column='EmailAddress', null=True, verbose_name='EmailAddress')),
                ('JobTitle', models.TextField(blank=True, db_column='JobTitle', null=True, verbose_name='JobTitle')),
                ('employeeID', models.TextField(blank=True, db_column='employeeID', null=True, verbose_name='employeeID')),
                ('AD_Enabled_Status', models.TextField(blank=True, db_column='AD_Enabled_Status', null=True, verbose_name='AD_Enabled_Status')),
                ('company', models.TextField(blank=True, db_column='company', null=True, verbose_name='company')),
                ('Department', models.TextField(blank=True, db_column='Department', null=True, verbose_name='Department')),
                ('AD_Account_Created', models.BigIntegerField(blank=True, db_column='AD_Account_Created', null=True, verbose_name='AD_Account_Created')),
                ('AD_Account_Created_days_back', models.IntegerField(blank=True, db_column='AD_Account_Created_days_back', null=True, verbose_name='AD_Account_Created_days_back')),
                ('Account_age_in_years', models.IntegerField(blank=True, db_column='Account_age_in_years', null=True, verbose_name='Account_age_in_years')),
                ('Password_Last_Set', models.BigIntegerField(blank=True, db_column='Password_Last_Set', null=True, verbose_name='Password_Last_Set')),
                ('Password_Last_Set_days_back', models.IntegerField(blank=True, db_column='Password_Last_Set_days_back', null=True, verbose_name='Password_Last_Set_days_back')),
                ('manager', models.TextField(blank=True, db_column='manager', null=True, verbose_name='manager')),
                ('distinguishedName', models.TextField(blank=True, db_column='distinguishedName', null=True, verbose_name='distinguishedName')),
                ('loader_instance', models.IntegerField(blank=True, null=True)),
                ('json_data', models.JSONField(blank=True, null=True)),
                ('hash_data', pgvector.django.vector.VectorField(blank=True, dimensions=1024, null=True)),
                ('fts', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DateRangeFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userID', models.IntegerField()),
                ('parent', models.CharField(choices=[('SAGE_USER_LIST', 'SAGEUserList'), ('CONTROL_AD_USER', 'ControlADUser'), ('CHANGE_REQUESTS', 'ChangeRequests'), ('HR_USER_LIST', 'HRUserList'), ('TICKET_LOGGING', 'TicketLogging'), ('UNIFIED_ACCESS_MANAGEMENT', 'UnifiedAccessManagement'), ('FAVORITE', 'Favorite'), ('UNIQUE', 'Unique'), ('FINDING', 'Finding'), ('TAB', 'Tab'), ('COPY_DT', 'Copy DT'), ('FINDING_VIEW', 'Finding View'), ('IMAGE_LOADER', 'Image Loader'), ('IMAGES', 'Images'), ('FINDING_ATTACHMENT', 'Finding Attachment')], max_length=255)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('key', models.CharField(max_length=255)),
                ('favorite_id', models.TextField(blank=True, null=True)),
                ('finding_id', models.TextField(blank=True, null=True)),
                ('img_loader_id', models.TextField(blank=True, null=True)),
                ('unique_id', models.TextField(blank=True, null=True)),
                ('tab_id', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DependentDropdown',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DynamicQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_name', models.CharField(max_length=255, unique=True)),
                ('query', models.TextField()),
                ('is_correct', models.BooleanField(default=False, editable=False)),
                ('rows', models.IntegerField(blank=True, null=True)),
                ('error_log', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExportDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Export Database',
                'verbose_name_plural': 'Export Databases',
            },
        ),
        migrations.CreateModel(
            name='ExportLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=255)),
                ('count_b_copy', models.CharField(blank=True, max_length=50, null=True, verbose_name='Count before copy')),
                ('count_a_copy', models.CharField(blank=True, max_length=50, null=True, verbose_name='Count after copy')),
                ('success', models.BooleanField(default=False)),
                ('error_log', models.TextField(blank=True, null=True)),
                ('start_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalDatabase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_type', models.CharField(choices=[('postgresql', 'PostgreSQL'), ('mysql', 'MySQL'), ('mssql', 'SQL Server')], max_length=100)),
                ('connection_name', models.CharField(max_length=255, unique=True)),
                ('db_name', models.CharField(max_length=255)),
                ('db_user', models.CharField(max_length=255)),
                ('db_pass', models.CharField(max_length=255)),
                ('db_host', models.CharField(max_length=255)),
                ('db_port', models.CharField(max_length=255)),
                ('connected', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('model_choices', models.CharField(max_length=255)),
                ('pre_filters', models.TextField(blank=True, null=True)),
                ('pre_columns', models.TextField(blank=True, null=True)),
                ('richtext_fields', models.TextField(blank=True, null=True)),
                ('search', models.CharField(blank=True, max_length=255, null=True)),
                ('order_by', models.CharField(blank=True, max_length=255, null=True)),
                ('snapshot', models.CharField(blank=True, max_length=255, null=True)),
                ('query_snapshot', models.CharField(blank=True, max_length=255, null=True)),
                ('is_dynamic_query', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('has_documents', models.BooleanField(default=False)),
                ('is_split_dt', models.BooleanField(default=False)),
                ('parent_dt', models.UUIDField(blank=True, null=True)),
                ('match_field', models.CharField(blank=True, max_length=255, null=True)),
                ('child_dt', models.UUIDField(blank=True, null=True)),
                ('img_loader_id', models.UUIDField(blank=True, null=True)),
                ('action_status', models.CharField(choices=[('IS_ACTIVE', 'Is Active'), ('DELETED', 'Deleted')], default='IS_ACTIVE', max_length=50)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Finding',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', django_quill.fields.QuillField(blank=True, null=True)),
                ('recommendation', django_quill.fields.QuillField(blank=True, null=True)),
                ('model_choices', models.CharField(max_length=255)),
                ('pre_filters', models.TextField(blank=True, null=True)),
                ('pre_columns', models.TextField(blank=True, null=True)),
                ('richtext_fields', models.TextField(blank=True, null=True)),
                ('search', models.CharField(blank=True, max_length=255, null=True)),
                ('order_by', models.CharField(blank=True, max_length=255, null=True)),
                ('snapshot', models.CharField(blank=True, max_length=255, null=True)),
                ('query_snapshot', models.CharField(blank=True, max_length=255, null=True)),
                ('is_dynamic_query', models.BooleanField(default=False)),
                ('has_documents', models.BooleanField(default=False)),
                ('is_split_dt', models.BooleanField(default=False)),
                ('parent_dt', models.UUIDField(blank=True, null=True)),
                ('match_field', models.CharField(blank=True, max_length=255, null=True)),
                ('child_dt', models.UUIDField(blank=True, null=True)),
                ('selected_rows', models.TextField(blank=True, null=True)),
                ('companies', models.CharField(blank=True, max_length=255, null=True)),
                ('itgc_categories', models.CharField(blank=True, max_length=255, null=True)),
                ('itgc_questions', models.CharField(blank=True, max_length=255, null=True)),
                ('action_type', models.CharField(blank=True, max_length=255, null=True)),
                ('action_deadline', models.DateTimeField(blank=True, null=True)),
                ('action_note', models.TextField(blank=True, null=True)),
                ('email_action_status', models.CharField(choices=[('OPEN', 'Open'), ('CLOSE', 'Close')], default='OPEN', max_length=20)),
                ('action_status', models.CharField(choices=[('IS_ACTIVE', 'Is Active'), ('DELETED', 'Deleted')], default='IS_ACTIVE', max_length=50)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('version_control', models.IntegerField(default=1, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='FindingAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_to', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('CLOSE', 'Close')], default='OPEN', max_length=20, verbose_name='Action Status')),
            ],
        ),
        migrations.CreateModel(
            name='FindingAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(upload_to='attachment')),
                ('attachment_type', models.CharField(choices=[('EVIDENCE', 'Evidence'), ('INSIGHTS', 'Insights')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('attachment_status', models.CharField(choices=[('Approved', 'Approved'), ('Not Approved', 'Not Approved')], max_length=50)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.TextField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=255, null=True)),
                ('version_control', models.IntegerField(default=1, editable=False)),
                ('action_status', models.CharField(choices=[('IS_ACTIVE', 'Is Active'), ('DELETED', 'Deleted')], default='IS_ACTIVE', max_length=50)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FloatRangeFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userID', models.IntegerField()),
                ('parent', models.CharField(choices=[('SAGE_USER_LIST', 'SAGEUserList'), ('CONTROL_AD_USER', 'ControlADUser'), ('CHANGE_REQUESTS', 'ChangeRequests'), ('HR_USER_LIST', 'HRUserList'), ('TICKET_LOGGING', 'TicketLogging'), ('UNIFIED_ACCESS_MANAGEMENT', 'UnifiedAccessManagement'), ('FAVORITE', 'Favorite'), ('UNIQUE', 'Unique'), ('FINDING', 'Finding'), ('TAB', 'Tab'), ('COPY_DT', 'Copy DT'), ('FINDING_VIEW', 'Finding View'), ('IMAGE_LOADER', 'Image Loader'), ('IMAGES', 'Images'), ('FINDING_ATTACHMENT', 'Finding Attachment')], max_length=255)),
                ('from_float_number', models.FloatField(blank=True, null=True)),
                ('to_float_number', models.FloatField(blank=True, null=True)),
                ('key', models.CharField(max_length=255)),
                ('favorite_id', models.TextField(blank=True, null=True)),
                ('finding_id', models.TextField(blank=True, null=True)),
                ('img_loader_id', models.TextField(blank=True, null=True)),
                ('unique_id', models.TextField(blank=True, null=True)),
                ('tab_id', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HideShowFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userID', models.IntegerField()),
                ('parent', models.CharField(choices=[('SAGE_USER_LIST', 'SAGEUserList'), ('CONTROL_AD_USER', 'ControlADUser'), ('CHANGE_REQUESTS', 'ChangeRequests'), ('HR_USER_LIST', 'HRUserList'), ('TICKET_LOGGING', 'TicketLogging'), ('UNIFIED_ACCESS_MANAGEMENT', 'UnifiedAccessManagement'), ('FAVORITE', 'Favorite'), ('UNIQUE', 'Unique'), ('FINDING', 'Finding'), ('TAB', 'Tab'), ('COPY_DT', 'Copy DT'), ('FINDING_VIEW', 'Finding View'), ('IMAGE_LOADER', 'Image Loader'), ('IMAGES', 'Images'), ('FINDING_ATTACHMENT', 'Finding Attachment')], max_length=255)),
                ('key', models.CharField(max_length=255)),
                ('value', models.BooleanField(default=False)),
                ('favorite_id', models.TextField(blank=True, null=True)),
                ('finding_id', models.TextField(blank=True, null=True)),
                ('img_loader_id', models.TextField(blank=True, null=True)),
                ('unique_id', models.TextField(blank=True, null=True)),
                ('tab_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HRUserList',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('First_Name', models.TextField(blank=True, db_column='First_Name', null=True, verbose_name='First_Name')),
                ('Last_Name', models.TextField(blank=True, db_column='Last_Name', null=True, verbose_name='Last_Name')),
                ('Job_Title', models.TextField(blank=True, db_column='Job_Title', null=True, verbose_name='Job_Title')),
                ('Business_Unit', models.TextField(blank=True, db_column='Business_Unit', null=True, verbose_name='Business_Unit')),
                ('Department', models.TextField(blank=True, db_column='Department', null=True, verbose_name='Department')),
                ('Join_Date', models.BigIntegerField(blank=True, db_column='Join_Date', null=True, verbose_name='Join_Date')),
                ('Employee_status', models.TextField(blank=True, db_column='Employee_status', null=True, verbose_name='Employee_status')),
                ('Termination_Date', models.BigIntegerField(blank=True, db_column='Termination_Date', null=True, verbose_name='Termination_Date')),
                ('loader_instance', models.IntegerField(blank=True, null=True)),
                ('json_data', models.JSONField(blank=True, null=True)),
                ('hash_data', pgvector.django.vector.VectorField(blank=True, dimensions=1024, null=True)),
                ('fts', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='uploaded_images/')),
                ('extracted_text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImageLoader',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', django_quill.fields.QuillField(blank=True, null=True)),
                ('recommendation', django_quill.fields.QuillField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('action_status', models.CharField(choices=[('IS_ACTIVE', 'Is Active'), ('DELETED', 'Deleted')], default='IS_ACTIVE', max_length=50)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=255, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('version_control', models.IntegerField(default=1, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='IntRangeFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userID', models.IntegerField()),
                ('parent', models.CharField(choices=[('SAGE_USER_LIST', 'SAGEUserList'), ('CONTROL_AD_USER', 'ControlADUser'), ('CHANGE_REQUESTS', 'ChangeRequests'), ('HR_USER_LIST', 'HRUserList'), ('TICKET_LOGGING', 'TicketLogging'), ('UNIFIED_ACCESS_MANAGEMENT', 'UnifiedAccessManagement'), ('FAVORITE', 'Favorite'), ('UNIQUE', 'Unique'), ('FINDING', 'Finding'), ('TAB', 'Tab'), ('COPY_DT', 'Copy DT'), ('FINDING_VIEW', 'Finding View'), ('IMAGE_LOADER', 'Image Loader'), ('IMAGES', 'Images'), ('FINDING_ATTACHMENT', 'Finding Attachment')], max_length=255)),
                ('from_number', models.IntegerField(blank=True, null=True)),
                ('to_number', models.IntegerField(blank=True, null=True)),
                ('key', models.CharField(max_length=255)),
                ('favorite_id', models.TextField(blank=True, null=True)),
                ('finding_id', models.TextField(blank=True, null=True)),
                ('img_loader_id', models.TextField(blank=True, null=True)),
                ('unique_id', models.TextField(blank=True, null=True)),
                ('tab_id', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PageItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userID', models.IntegerField()),
                ('parent', models.CharField(choices=[('SAGE_USER_LIST', 'SAGEUserList'), ('CONTROL_AD_USER', 'ControlADUser'), ('CHANGE_REQUESTS', 'ChangeRequests'), ('HR_USER_LIST', 'HRUserList'), ('TICKET_LOGGING', 'TicketLogging'), ('UNIFIED_ACCESS_MANAGEMENT', 'UnifiedAccessManagement'), ('FAVORITE', 'Favorite'), ('UNIQUE', 'Unique'), ('FINDING', 'Finding'), ('TAB', 'Tab'), ('COPY_DT', 'Copy DT'), ('FINDING_VIEW', 'Finding View'), ('IMAGE_LOADER', 'Image Loader'), ('IMAGES', 'Images'), ('FINDING_ATTACHMENT', 'Finding Attachment')], max_length=255)),
                ('items_per_page', models.IntegerField(default=25)),
                ('favorite_id', models.TextField(blank=True, null=True)),
                ('finding_id', models.TextField(blank=True, null=True)),
                ('img_loader_id', models.TextField(blank=True, null=True)),
                ('unique_id', models.TextField(blank=True, null=True)),
                ('tab_id', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SAGEUserList',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.TextField(blank=True, db_column='username', null=True, verbose_name='username')),
                ('email', models.TextField(blank=True, db_column='email', null=True, verbose_name='email')),
                ('active', models.TextField(blank=True, db_column='active', null=True, verbose_name='active')),
                ('loader_instance', models.IntegerField(blank=True, null=True)),
                ('json_data', models.JSONField(blank=True, null=True)),
                ('hash_data', pgvector.django.vector.VectorField(blank=True, dimensions=1024, null=True)),
                ('fts', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SelectedRows',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=255)),
                ('model_choice', models.CharField(choices=[('SAGE_USER_LIST', 'SAGEUserList'), ('CONTROL_AD_USER', 'ControlADUser'), ('CHANGE_REQUESTS', 'ChangeRequests'), ('HR_USER_LIST', 'HRUserList'), ('TICKET_LOGGING', 'TicketLogging'), ('UNIFIED_ACCESS_MANAGEMENT', 'UnifiedAccessManagement'), ('FAVORITE', 'Favorite'), ('UNIQUE', 'Unique'), ('FINDING', 'Finding'), ('TAB', 'Tab'), ('COPY_DT', 'Copy DT'), ('FINDING_VIEW', 'Finding View'), ('IMAGE_LOADER', 'Image Loader'), ('IMAGES', 'Images'), ('FINDING_ATTACHMENT', 'Finding Attachment')], max_length=255)),
                ('rows', models.TextField()),
                ('favorite_id', models.TextField(blank=True, null=True)),
                ('finding_id', models.TextField(blank=True, null=True)),
                ('img_loader_id', models.TextField(blank=True, null=True)),
                ('unique_id', models.TextField(blank=True, null=True)),
                ('tab_id', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServerFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.CharField(choices=[('SAGE_USER_LIST', 'SAGEUserList'), ('CONTROL_AD_USER', 'ControlADUser'), ('CHANGE_REQUESTS', 'ChangeRequests'), ('HR_USER_LIST', 'HRUserList'), ('TICKET_LOGGING', 'TicketLogging'), ('UNIFIED_ACCESS_MANAGEMENT', 'UnifiedAccessManagement'), ('FAVORITE', 'Favorite'), ('UNIQUE', 'Unique'), ('FINDING', 'Finding'), ('TAB', 'Tab'), ('COPY_DT', 'Copy DT'), ('FINDING_VIEW', 'Finding View'), ('IMAGE_LOADER', 'Image Loader'), ('IMAGES', 'Images'), ('FINDING_ATTACHMENT', 'Finding Attachment')], max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('userID', models.IntegerField()),
                ('key', models.CharField(max_length=255)),
                ('favorite_id', models.TextField(blank=True, null=True)),
                ('finding_id', models.TextField(blank=True, null=True)),
                ('img_loader_id', models.TextField(blank=True, null=True)),
                ('unique_id', models.TextField(blank=True, null=True)),
                ('tab_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tab',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('model_choices', models.CharField(max_length=255)),
                ('pre_filters', models.TextField(blank=True, null=True)),
                ('pre_columns', models.TextField(blank=True, null=True)),
                ('richtext_fields', models.TextField(blank=True, null=True)),
                ('search', models.CharField(blank=True, max_length=255, null=True)),
                ('order_by', models.CharField(blank=True, max_length=255, null=True)),
                ('snapshot', models.CharField(blank=True, max_length=255, null=True)),
                ('query_snapshot', models.CharField(blank=True, max_length=255, null=True)),
                ('is_dynamic_query', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('has_documents', models.BooleanField(default=False)),
                ('is_split_dt', models.BooleanField(default=False)),
                ('parent_dt', models.UUIDField(blank=True, null=True)),
                ('match_field', models.CharField(blank=True, max_length=255, null=True)),
                ('child_dt', models.UUIDField(blank=True, null=True)),
                ('img_loader_id', models.UUIDField(blank=True, null=True)),
                ('base_view', models.TextField(blank=True, null=True)),
                ('sidebar_parent', models.TextField(blank=True, null=True)),
                ('selected_rows', models.TextField(blank=True, null=True)),
                ('action_status', models.CharField(choices=[('IS_ACTIVE', 'Is Active'), ('DELETED', 'Deleted')], default='IS_ACTIVE', max_length=50)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('content_type', models.ForeignKey(limit_choices_to={'app_label__in': ['tables', 'common']}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='DT')),
                ('date_range_filters', models.ManyToManyField(blank=True, to='tables.daterangefilter')),
                ('float_range_filters', models.ManyToManyField(blank=True, to='tables.floatrangefilter')),
                ('hide_show_filters', models.ManyToManyField(blank=True, to='tables.hideshowfilter')),
                ('int_range_filters', models.ManyToManyField(blank=True, to='tables.intrangefilter')),
                ('page_items', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tables.pageitems')),
                ('saved_filters', models.ManyToManyField(blank=True, to='common.savedfilter')),
                ('server_filters', models.ManyToManyField(blank=True, to='tables.serverfilter')),
            ],
        ),
        migrations.CreateModel(
            name='TableDropdownItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('loader_instance', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaskStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=255, unique=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TicketLogging',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('Agent_Responded_Time', models.BigIntegerField(blank=True, db_column='Agent_Responded_Time', null=True, verbose_name='Agent_Responded_Time')),
                ('Channel', models.TextField(blank=True, db_column='Channel', null=True, verbose_name='Channel')),
                ('Created_Time_Ticket', models.BigIntegerField(blank=True, db_column='Created_Time_Ticket', null=True, verbose_name='Created_Time_Ticket')),
                ('Customer_Responded_Time', models.BigIntegerField(blank=True, db_column='Customer_Responded_Time', null=True, verbose_name='Customer_Responded_Time')),
                ('Email_Ticket', models.TextField(blank=True, db_column='Email_Ticket', null=True, verbose_name='Email_Ticket')),
                ('First_Response_Time_in_Business_Hours', models.TextField(blank=True, db_column='First_Response_Time_in_Business_Hours', null=True, verbose_name='First_Response_Time_in_Business_Hours')),
                ('Happiness_Rating', models.TextField(blank=True, db_column='Happiness_Rating', null=True, verbose_name='Happiness_Rating')),
                ('Is_Archived', models.TextField(blank=True, db_column='Is_Archived', null=True, verbose_name='Is_Archived')),
                ('Is_Escalated', models.TextField(blank=True, db_column='Is_Escalated', null=True, verbose_name='Is_Escalated')),
                ('Is_Overdue', models.TextField(blank=True, db_column='Is_Overdue', null=True, verbose_name='Is_Overdue')),
                ('Language', models.TextField(blank=True, db_column='Language', null=True, verbose_name='Language')),
                ('Modified_By_Ticket', models.BigIntegerField(blank=True, db_column='Modified_By_Ticket', null=True, verbose_name='Modified_By_Ticket')),
                ('Modified_Time_Ticket', models.TextField(blank=True, db_column='Modified_Time_Ticket', null=True, verbose_name='Modified_Time_Ticket')),
                ('Number_of_Comments', models.TextField(blank=True, db_column='Number_of_Comments', null=True, verbose_name='Number_of_Comments')),
                ('Number_of_Outgoing', models.TextField(blank=True, db_column='Number_of_Outgoing', null=True, verbose_name='Number_of_Outgoing')),
                ('Number_of_Reassign', models.TextField(blank=True, db_column='Number_of_Reassign', null=True, verbose_name='Number_of_Reassign')),
                ('Number_of_Reopen', models.TextField(blank=True, db_column='Number_of_Reopen', null=True, verbose_name='Number_of_Reopen')),
                ('Number_of_Responses', models.TextField(blank=True, db_column='Number_of_Responses', null=True, verbose_name='Number_of_Responses')),
                ('Number_of_Threads', models.TextField(blank=True, db_column='Number_of_Threads', null=True, verbose_name='Number_of_Threads')),
                ('Phone_Ticket', models.TextField(blank=True, db_column='Phone_Ticket', null=True, verbose_name='Phone_Ticket')),
                ('Priority_Ticket', models.TextField(blank=True, db_column='Priority_Ticket', null=True, verbose_name='Priority_Ticket')),
                ('Resolution_Time_in_Business_Hours', models.TextField(blank=True, db_column='Resolution_Time_in_Business_Hours', null=True, verbose_name='Resolution_Time_in_Business_Hours')),
                ('SLA_Violation_Type', models.TextField(blank=True, db_column='SLA_Violation_Type', null=True, verbose_name='SLA_Violation_Type')),
                ('Status_Ticket', models.TextField(blank=True, db_column='Status_Ticket', null=True, verbose_name='Status_Ticket')),
                ('Subject', models.TextField(blank=True, db_column='Subject', null=True, verbose_name='Subject')),
                ('Ticket_Age', models.TextField(blank=True, db_column='Ticket_Age', null=True, verbose_name='Ticket_Age')),
                ('Ticket_Closed_Time', models.BigIntegerField(blank=True, db_column='Ticket_Closed_Time', null=True, verbose_name='Ticket_Closed_Time')),
                ('Ticket_Id', models.TextField(blank=True, db_column='Ticket_Id', null=True, verbose_name='Ticket_Id')),
                ('Ticket_Owner', models.TextField(blank=True, db_column='Ticket_Owner', null=True, verbose_name='Ticket_Owner')),
                ('To_Address', models.TextField(blank=True, db_column='To_Address', null=True, verbose_name='To_Address')),
                ('Total_Response_Time_in_Business_Hours', models.TextField(blank=True, db_column='Total_Response_Time_in_Business_Hours', null=True, verbose_name='Total_Response_Time_in_Business_Hours')),
                ('Total_Time_Spent', models.TextField(blank=True, db_column='Total_Time_Spent', null=True, verbose_name='Total_Time_Spent')),
                ('Account_Name', models.TextField(blank=True, db_column='Account_Name', null=True, verbose_name='Account_Name')),
                ('Layout_Account', models.TextField(blank=True, db_column='Layout_Account', null=True, verbose_name='Layout_Account')),
                ('loader_instance', models.IntegerField(blank=True, null=True)),
                ('json_data', models.JSONField(blank=True, null=True)),
                ('hash_data', pgvector.django.vector.VectorField(blank=True, dimensions=1024, null=True)),
                ('fts', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UnifiedAccessManagement',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('User_Department', models.TextField(blank=True, db_column='User_Department', null=True, verbose_name='User_Department')),
                ('AD_Account', models.TextField(blank=True, db_column='AD_Account', null=True, verbose_name='AD_Account')),
                ('HR_Status', models.TextField(blank=True, db_column='HR_Status', null=True, verbose_name='HR_Status')),
                ('AD_Status', models.TextField(blank=True, db_column='AD_Status', null=True, verbose_name='AD_Status')),
                ('OU', models.TextField(blank=True, db_column='OU', null=True, verbose_name='OU')),
                ('Employment_Status', models.TextField(blank=True, db_column='Employment_Status', null=True, verbose_name='Employment_Status')),
                ('EMail', models.TextField(blank=True, db_column='EMail', null=True, verbose_name='EMail')),
                ('Company_Laptop_Hardware_User', models.TextField(blank=True, db_column='Company_Laptop_Hardware_User', null=True, verbose_name='Company_Laptop_Hardware_User')),
                ('VPN_Status', models.TextField(blank=True, db_column='VPN_Status', null=True, verbose_name='VPN_Status')),
                ('VPN_Last_Used', models.TextField(blank=True, db_column='VPN_Last_Used', null=True, verbose_name='VPN_Last_Used')),
                ('Servicenow_Status', models.TextField(blank=True, db_column='Servicenow_Status', null=True, verbose_name='Servicenow_Status')),
                ('Servicenow_Last_Used', models.TextField(blank=True, db_column='Servicenow_Last_Used', null=True, verbose_name='Servicenow_Last_Used')),
                ('SAP_Status', models.TextField(blank=True, db_column='SAP_Status', null=True, verbose_name='SAP_Status')),
                ('SAP_Last_Used', models.TextField(blank=True, db_column='SAP_Last_Used', null=True, verbose_name='SAP_Last_Used')),
                ('Financial_system_Status', models.TextField(blank=True, db_column='Financial_system_Status', null=True, verbose_name='Financial_system_Status')),
                ('Financial_system_Last_Used', models.TextField(blank=True, db_column='Financial_system_Last_Used', null=True, verbose_name='Financial_system_Last_Used')),
                ('SPLUNK_Status', models.TextField(blank=True, db_column='SPLUNK_Status', null=True, verbose_name='SPLUNK_Status')),
                ('SPLUNK_Last_Used', models.TextField(blank=True, db_column='SPLUNK_Last_Used', null=True, verbose_name='SPLUNK_Last_Used')),
                ('HR_Last_Used', models.TextField(blank=True, db_column='HR_Last_Used', null=True, verbose_name='HR_Last_Used')),
                ('Payroll_Status', models.TextField(blank=True, db_column='Payroll_Status', null=True, verbose_name='Payroll_Status')),
                ('Payroll_Last_Used', models.TextField(blank=True, db_column='Payroll_Last_Used', null=True, verbose_name='Payroll_Last_Used')),
                ('Risk_Score', models.TextField(blank=True, db_column='Risk_Score', null=True, verbose_name='Risk_Score')),
                ('loader_instance', models.IntegerField(blank=True, null=True)),
                ('json_data', models.JSONField(blank=True, null=True)),
                ('hash_data', pgvector.django.vector.VectorField(blank=True, dimensions=1024, null=True)),
                ('fts', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('userID', models.IntegerField()),
                ('parent', models.CharField(blank=True, choices=[('SAGE_USER_LIST', 'SAGEUserList'), ('CONTROL_AD_USER', 'ControlADUser'), ('CHANGE_REQUESTS', 'ChangeRequests'), ('HR_USER_LIST', 'HRUserList'), ('TICKET_LOGGING', 'TicketLogging'), ('UNIFIED_ACCESS_MANAGEMENT', 'UnifiedAccessManagement'), ('FAVORITE', 'Favorite'), ('UNIQUE', 'Unique'), ('FINDING', 'Finding'), ('TAB', 'Tab'), ('COPY_DT', 'Copy DT'), ('FINDING_VIEW', 'Finding View'), ('IMAGE_LOADER', 'Image Loader'), ('IMAGES', 'Images'), ('FINDING_ATTACHMENT', 'Finding Attachment')], max_length=255, null=True)),
                ('key', models.CharField(max_length=255)),
                ('favorite_id', models.TextField(blank=True, null=True)),
                ('finding_id', models.TextField(blank=True, null=True)),
                ('img_loader_id', models.TextField(blank=True, null=True)),
                ('unique_id', models.TextField(blank=True, null=True)),
                ('tab_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VendorLinked',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_string', models.TextField()),
                ('match_string', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temporary_table_name', models.CharField(max_length=255, unique=True)),
                ('query', models.TextField()),
                ('is_correct', models.BooleanField(default=False, editable=False)),
                ('rows', models.IntegerField(blank=True, null=True)),
                ('error_log', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temporary_table', to='contenttypes.contenttype', verbose_name='Choose model')),
                ('database', models.ForeignKey(blank=True, help_text='For local database like sqlite keep this field empty', null=True, on_delete=django.db.models.deletion.CASCADE, to='tables.externaldatabase')),
            ],
        ),
        migrations.CreateModel(
            name='TabNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', django_quill.fields.QuillField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('tab', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tables.tab')),
            ],
        ),
        migrations.CreateModel(
            name='TableDropdownSubItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subitem', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subitems', to='tables.tabledropdownitem')),
            ],
        ),
    ]
