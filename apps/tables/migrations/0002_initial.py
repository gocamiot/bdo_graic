# Generated by Django 4.2 on 2025-10-30 11:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tables', '0001_initial'),
        ('common', '0002_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='tab',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tab',
            name='user_filters',
            field=models.ManyToManyField(blank=True, to='tables.userfilter'),
        ),
        migrations.AddField(
            model_name='imageloader',
            name='images',
            field=models.ManyToManyField(blank=True, to='tables.image'),
        ),
        migrations.AddField(
            model_name='imageloader',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tables.imageloader'),
        ),
        migrations.AddField(
            model_name='findingattachment',
            name='finding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tables.finding'),
        ),
        migrations.AddField(
            model_name='findingattachment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tables.findingattachment'),
        ),
        migrations.AddField(
            model_name='findingaction',
            name='finding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='tables.finding'),
        ),
        migrations.AddField(
            model_name='finding',
            name='content_type',
            field=models.ForeignKey(blank=True, limit_choices_to={'app_label__in': ['tables', 'common']}, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='DT'),
        ),
        migrations.AddField(
            model_name='finding',
            name='date_range_filters',
            field=models.ManyToManyField(blank=True, to='tables.daterangefilter'),
        ),
        migrations.AddField(
            model_name='finding',
            name='float_range_filters',
            field=models.ManyToManyField(blank=True, to='tables.floatrangefilter'),
        ),
        migrations.AddField(
            model_name='finding',
            name='hide_show_filters',
            field=models.ManyToManyField(blank=True, to='tables.hideshowfilter'),
        ),
        migrations.AddField(
            model_name='finding',
            name='int_range_filters',
            field=models.ManyToManyField(blank=True, to='tables.intrangefilter'),
        ),
        migrations.AddField(
            model_name='finding',
            name='page_items',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tables.pageitems'),
        ),
        migrations.AddField(
            model_name='finding',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tables.finding'),
        ),
        migrations.AddField(
            model_name='finding',
            name='saved_filters',
            field=models.ManyToManyField(blank=True, to='common.savedfilter'),
        ),
        migrations.AddField(
            model_name='finding',
            name='server_filters',
            field=models.ManyToManyField(blank=True, to='tables.serverfilter'),
        ),
        migrations.AddField(
            model_name='finding',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='finding',
            name='user_filters',
            field=models.ManyToManyField(blank=True, to='tables.userfilter'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='content_type',
            field=models.ForeignKey(limit_choices_to={'app_label__in': ['tables', 'common']}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='DT'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='date_range_filters',
            field=models.ManyToManyField(blank=True, to='tables.daterangefilter'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='float_range_filters',
            field=models.ManyToManyField(blank=True, to='tables.floatrangefilter'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='hide_show_filters',
            field=models.ManyToManyField(blank=True, to='tables.hideshowfilter'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='int_range_filters',
            field=models.ManyToManyField(blank=True, to='tables.intrangefilter'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='page_items',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tables.pageitems'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='saved_filters',
            field=models.ManyToManyField(blank=True, to='common.savedfilter'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='server_filters',
            field=models.ManyToManyField(blank=True, to='tables.serverfilter'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user_filters',
            field=models.ManyToManyField(blank=True, to='tables.userfilter'),
        ),
        migrations.AddField(
            model_name='exportdb',
            name='export_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='export_db', to='tables.externaldatabase'),
        ),
        migrations.AddField(
            model_name='dynamicquery',
            name='database',
            field=models.ForeignKey(blank=True, help_text='For local database like sqlite keep this field empty', null=True, on_delete=django.db.models.deletion.CASCADE, to='tables.externaldatabase'),
        ),
        migrations.AddField(
            model_name='dynamicquery',
            name='temporary_tables',
            field=models.ManyToManyField(blank=True, to='tables.temporarytable'),
        ),
        migrations.AddField(
            model_name='dependentdropdown',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tables.dependentdropdown'),
        ),
        migrations.AddField(
            model_name='application',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tables.application'),
        ),
        migrations.AlterUniqueTogether(
            name='findingaction',
            unique_together={('finding', 'action_to')},
        ),
    ]
